{{- if and (not .Values.ingress.disabled) (not .Values.jobsOnly) -}}
{{- if (.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ template "appname" . }}-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    {{- if .Values.ingress.clusterIssuer }}
    {{ .Values.ingress.certManagerAnnotationPrefix }}/cluster-issuer: {{ .Values.ingress.clusterIssuer }}
    {{- end }}
    {{- if .Values.ingress.basicAuthSecret }}
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.basicAuthSecret }}
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    {{- end }}
    # In GKE we need to specify ingress.class
    kubernetes.io/ingress.class: "nginx"
    # Set maximum allowed upload file size
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ingress.maxBodySize }}
    # Use RegEx for paths
    # https://kubernetes.github.io/ingress-nginx/user-guide/ingress-path-matching/#regular-expression-support
    nginx.ingress.kubernetes.io/use-regex: "true"
    {{- if .Values.ingress.preventRobots }}
    nginx.ingress.kubernetes.io/server-snippet: |
      location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
      }
    {{- end }}
    {{- if .Values.ingress.whitelistIP  }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.ingress.whitelistIP }}
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}
spec:
  tls:
    - hosts:
      {{- range .Values.service.urls }}
      - {{ template "hostname" . }}
      {{- end }}
      secretName: {{ .Values.ingress.secretName }}
  rules:
    {{- range .Values.service.urls }}
    - host: {{ template "hostname" . }}
      http:
        paths:
          - path: {{ $.Values.ingress.path }}
            {{- if ($.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if ($.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress") }}
              service:
                name: {{ template "appname" $ }}-service
                port:
                  number: 80
              {{- else }}
              serviceName: {{ template "appname" $ }}-service
              servicePort: 80
              {{- end }}
    {{- end }}
{{- end }}
