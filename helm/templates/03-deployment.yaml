{{- if (not .Values.jobsOnly) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  namespace: "{{ .Values.namespace }}"
  annotations:
    app.gitlab.com/app: "{{ .Values.gitlab.app }}"
    app.gitlab.com/env: "{{ .Values.gitlab.env }}"
  labels:
    app: {{ template "appname" . }}
    release: "{{ .Release.Name }}"
    track: "{{ .Values.application.track }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "appname" . }}
  template:
    metadata:
      annotations:
        app.gitlab.com/app: "{{ .Values.gitlab.app }}"
        app.gitlab.com/env: "{{ .Values.gitlab.env }}"
        kolga.io/deploymentTime: {{ now | date "Mon Jan 2 15:04:05 UTC 2006" | quote }}
      labels:
        track: "{{ .Values.application.track }}"
        release: "{{ .Release.Name }}"
        app: {{ template "appname" . }}
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image }}"
          imagePullPolicy: {{ .Values.app_image.pullPolicy }}
          {{- if .Values.application.secretName }}
          envFrom:
          - secretRef:
                name: {{ .Values.application.secretName }}
          {{- end }}
          {{- if or .Values.application.requestCpu .Values.application.requestRam .Values.application.limitCpu .Values.application.limitRam}}
          resources:
            {{- if or .Values.application.requestCpu .Values.application.requestRam}}
            requests:
              {{- if .Values.application.requestCpu }}
              cpu: "{{ .Values.application.requestCpu }}"
              {{- end }}
              {{- if .Values.application.requestRam }}
              memory: "{{ .Values.application.requestRam }}"
              {{- end }}
            {{- end }}
            {{- if or .Values.application.limitCpu .Values.application.limitRam}}
            limits:
              {{- if .Values.application.limitCpu }}
              cpu: "{{ .Values.application.limitCpu }}"
              {{- end }}
              {{- if .Values.application.limitRam }}
              memory: "{{ .Values.application.limitRam }}"
              {{- end }}
            {{- end }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: APPLICATION_URL
              value: {{ template "hostname" .Values.service.url }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.application.livenessFile }}
          livenessProbe:
            exec:
              command:
              - cat
              - {{ .Values.application.livenessFile }}
          {{ else }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.application.probeInitialDelay }}
            failureThreshold: {{ .Values.application.probeFailureThreshold }}
            periodSeconds: {{ .Values.application.probePeriod }}
            httpGet:
              path: "{{ .Values.application.livenessPath }}"
              port: {{ .Values.service.targetPort }}
          {{- end }}
          {{- if .Values.application.readinessFile }}
          readinessProbe:
            exec:
              command:
              - cat
              - {{ .Values.application.readinessFile }}
          {{ else }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.application.probeInitialDelay }}
            failureThreshold: {{ .Values.application.probeFailureThreshold }}
            periodSeconds: {{ .Values.application.probePeriod }}
            httpGet:
              path: "{{ .Values.application.readinessPath }}"
              port: {{ .Values.service.targetPort }}
          {{- end }}
          {{- if or .Values.application.fileSecretName .Values.application.temporaryStoragePath }}
          volumeMounts:
          {{- if .Values.application.temporaryStoragePath }}
            - mountPath: {{ .Values.application.temporaryStoragePath }}
              name: non-persistent-writable-volume
          {{- end }}
          {{- if .Values.application.fileSecretName }}
            - mountPath: {{ .Values.application.fileSecretPath }}
              name: filesecrets
          {{- end }}
          {{- end }}
          {{- if and .Values.application.pvc.enabled .Values.application.pvc.mountPath }}
            - name: {{ template "appname" . }}-volume
              mountPath: {{ .Values.application.pvc.mountPath }}
          {{- end }}
      imagePullSecrets:
        - name: regcred
      {{- if or .Values.application.fileSecretName .Values.application.temporaryStoragePath }}
      volumes:
      {{- if .Values.application.temporaryStoragePath }}
        - name: non-persistent-writable-volume
          emptyDir: {}
      {{- end }}
      {{ if .Values.application.fileSecretName }}
        - name: filesecrets
          secret:
            secretName: {{ .Values.application.fileSecretName }}
      {{- end }}
      {{- end }}
      {{- if and .Values.application.pvc.enabled .Values.application.pvc.mountPath }}
        - name: {{ template "appname" . }}-volume
          persistentVolumeClaim:
            claimName: {{ template "appname" . }}-pvc
      {{- end }}
{{- end }}
